<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.User1Dao">

    <resultMap type="com.entity.User1" id="User1Map">
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="uname" column="uname" jdbcType="VARCHAR"/>
        <result property="upassword" column="upassword" jdbcType="VARCHAR"/>
        <result property="utype" column="utype" jdbcType="VARCHAR"/>
        <result property="usend" column="usend" jdbcType="INTEGER"/>
        <result property="utime" column="utime" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="User1Map">
        select
          uid, uname, upassword, utype, usend, utime
        from people.user1
        where uid = #{uid}
    </select>

    <select id="queryUserRoles" resultType="String">
        select name from role where id in
        (select role_id from user_role where uid=
        (select uid from user1 where uname = #{uname}))
    </select>

    <select id="queryUserPerms" resultType="String">
        select a.name
        from permission a inner join role_perms rp on a.id = rp.perm_id
        inner  join role r on rp.role_id = r.id
        inner join user_role ur on r.id = ur.role_id
        inner  join user1 u on ur.uid = u.uid
        where u.uname = #{uname}
    </select>

    <select id="queryByUsername" resultMap="User1Map">
        select uid, uname, upassword, utype, usend, utime from user1 where uname = #{uname}
    </select>

    <insert id="roleInsert" keyProperty="id" useGeneratedKeys="true">
        insert into people.user_role(uid, role_id)
        values
          (#{uid}, #{role_id})
    </insert>

    <delete id="deleteShiro">
        delete from people.user_role where uid = #{uid}
    </delete>

    <update id="roleUpdate">
        update  people.user_role
        <set>
            <if test="role_id != null and role_id != ''">
                role_id = #{role_id},
            </if>
        </set>
        where uid = #{uid}
    </update>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="User1Map">
        select
          uid, uname, upassword, utype, usend, utime
        from people.user1
        <where>
            <if test="uname!=null">
                    and uname LIKE '%${uname}%'
                </if>
                <if test="usend!=null">
                    and usend = ${usend}
                </if>
        </where>
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="User1Map">
        select
          uid, uname, upassword, utype, usend, utime
        from people.user1
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="uid" useGeneratedKeys="true">
        insert into people.user1(uname, upassword, utype, usend, utime)
        values (#{uname}, #{upassword}, #{utype}, #{usend}, #{utime})
    </insert>


    <!--通过主键修改数据-->
    <update id="update">
        update people.user1
        <set>
            <if test="uname != null and uname != ''">
                uname = #{uname},
            </if>
            <if test="upassword != null and upassword != ''">
                upassword = #{upassword},
            </if>
            <if test="utype != null and utype != ''">
                utype = #{utype},
            </if>
            <if test="usend != null">
                usend = #{usend},
            </if>
            <if test="utime != null and utime != ''">
                utime = #{utime},
            </if>
        </set>
        where uid = #{uid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from people.user1 where uid = #{uid}
    </delete>

    <select id="login" resultMap="User1Map">
        select
        uid, uname, upassword, utype, usend, utime
        from people.user1
        where uname=#{uname} and upassword=#{upassword}
    </select>
</mapper>